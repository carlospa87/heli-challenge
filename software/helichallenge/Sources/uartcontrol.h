/**
 * @file uartcontrol.h
 * @version 0.1
 * @date 02/05/2013
 * @author: Carlos Pereira Atencio
 * 
 * This library interfaces with the UART internal peripheral. The TX and RX
 * pins are internally routed to the OpenSDA microcontroller in the KL25Z
 * board to send serial port messages to the computer through a Virtual COM
 * USB interface.
 * 
 * As the only functionality given to this peripheral is to send message to
 * the computer for debugging purposes only the transmission of UART message
 * has been configure, leaving the receiving messages feature inactive.
 * 
 * This library has been developed to use a Processor Expert autogenerated
 * code from the AS1:Serial_LDD component.
 * 
 * UART has been configured with the following settings:
 *   115200 baud rate
 *   8 bits data width
 *   1 stop bit
 *   no parity bit
 *   no flow control
 *   Rx Pin is PTA1 (UART0_RX)
 *************************************************************************** */

#ifndef UARTUSB_H_
#define UARTUSB_H_

#include "common.h"
#include "PE_LDD.h"

/** UART_hanlde
 * Groups together the device handler and a boolean to mark the end of
 * transmission.
 *************************************************************************** */
typedef struct {
  LDD_TDeviceData *handle; /* LDD device handle */
  volatile bool isSent; /* to be set to 1 once the block has been sent */
} UART_handler;

void uart_Init(void);
void uart_SendChar(char ch);
void uart_SendString(const char *str);
void uart_SendStringLn(const char *str);
void uart_SendByte(const uint8 integer);
void uart_SendInt8(const int8 integer);
void uart_SendInt16(const int16 integer);
void uart_SendInt32(const int32 integer);
void uart_SendFloat(const float floatnumber);
void uart_SendUInt16(const uint16 integer);

#endif /* UARTUSB_H_ */
